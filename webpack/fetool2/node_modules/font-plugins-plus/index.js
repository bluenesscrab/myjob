var ai2font = require('fsk-font');
var path = require('path');
var fs = require('fs');
var glob = require('glob');
var fsPath = require('fs-path');

var color = require('colors-cli/safe')
var error = color.red;
var warn = color.yellow;
var notice = color.blue;
var success = color.green;

function FontPluginsPlus(options) {
  this.opt = Object.assign({
    name:'iconfont', // String default 'iconfont'
    from:'', //String | Array  字体入口
    to:'', // string 字体出口
    cssPath:'', //输出到指定css中
    type:'', //字体类型
  }, options);
}
FontPluginsPlus.prototype.apply = function() {
  console.log(notice('字体编译打包'));
  console.log(this.opt);

  var opt = this.opt;
  var name = opt.name;
  var dir = typeof opt.from == 'string' ? [opt.from]:opt.from;
  var cssPath = opt.cssPath;
  var outPath = opt.to;
  var copyPath = path.join(outPath, 'build/');

  fsPath.remove(copyPath, function(){
    fsPath.mkdir(copyPath, function(){
      // 默认数据地图
      var nameMap = {};
      var defaultMap = [];
      dir.forEach(function(paths){
        var fileSvg = glob.sync(path.join(paths, '/**.svg'));
        fileSvg.forEach(function(item){
          var name = item.replace(paths, '').toLowerCase().replace('.svg', '');
          if(!nameMap[name]){
            nameMap[name] = item;
            defaultMap.push(item);
          }else{
            console.log( error('error!  svg名字重复!!') );
            console.log( error('name:'+name) );
            console.log( error('file:'+nameMap[name]) );
            console.log( error('file:'+item) );
            process.exit(0);
          }
        });
      });

      defaultMap.forEach(function(file, index){
        var readable, writable;
        fs.stat( file, function( err, st ){
          if( st.isFile() ){ // 判断是否为文件
            readable = fs.createReadStream( file ); // 创建读取流
            writable = fs.createWriteStream( path.join(copyPath, file.replace(/.+\//g,'')) ); // 创建写入流 
            readable.pipe( writable ); // 通过管道来传输流
          }
          if(defaultMap.length == index+1){
            ai2font({
              font: name,
              target:outPath,
              deep: !!opt.deep,
              dir: copyPath,
              css: cssPath
            });
          }
        });
      }); 

    })
  });
};
module.exports = FontPluginsPlus;
